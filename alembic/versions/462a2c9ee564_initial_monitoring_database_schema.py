"""Initial monitoring database schema

Revision ID: 462a2c9ee564
Revises: 
Create Date: 2025-10-22 03:23:52.221670

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '462a2c9ee564'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.String(length=100), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=True),
    sa.Column('threshold', sa.Float(), nullable=True),
    sa.Column('comparison', sa.String(length=5), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('component', sa.String(length=50), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('cooldown_minutes', sa.Integer(), nullable=True),
    sa.Column('channels', sa.JSON(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('last_triggered', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rule_id', name='uq_rule_id')
    )
    op.create_index(op.f('ix_alert_rules_enabled'), 'alert_rules', ['enabled'], unique=False)
    op.create_index(op.f('ix_alert_rules_rule_id'), 'alert_rules', ['rule_id'], unique=True)
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alert_id', sa.String(length=100), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('metric_name', sa.String(length=100), nullable=True),
    sa.Column('metric_value', sa.Float(), nullable=True),
    sa.Column('threshold', sa.Float(), nullable=True),
    sa.Column('component', sa.String(length=50), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('acknowledged', sa.Boolean(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('acknowledged_by', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_alerts_acknowledged', 'alerts', ['acknowledged'], unique=False)
    op.create_index('idx_alerts_timestamp_severity', 'alerts', ['timestamp', 'severity'], unique=False)
    op.create_index(op.f('ix_alerts_acknowledged'), 'alerts', ['acknowledged'], unique=False)
    op.create_index(op.f('ix_alerts_alert_id'), 'alerts', ['alert_id'], unique=True)
    op.create_index(op.f('ix_alerts_severity'), 'alerts', ['severity'], unique=False)
    op.create_index(op.f('ix_alerts_timestamp'), 'alerts', ['timestamp'], unique=False)
    op.create_table('degradation_analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('metric_name', sa.String(length=100), nullable=True),
    sa.Column('baseline_value', sa.Float(), nullable=True),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('degradation_percent', sa.Float(), nullable=True),
    sa.Column('failure_cohort_size', sa.Integer(), nullable=True),
    sa.Column('top_features', sa.JSON(), nullable=True),
    sa.Column('error_patterns', sa.JSON(), nullable=True),
    sa.Column('recommended_actions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_degradation_timestamp_model', 'degradation_analysis', ['timestamp', 'model_version'], unique=False)
    op.create_index(op.f('ix_degradation_analysis_model_version'), 'degradation_analysis', ['model_version'], unique=False)
    op.create_index(op.f('ix_degradation_analysis_timestamp'), 'degradation_analysis', ['timestamp'], unique=False)
    op.create_table('drift_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('feature_name', sa.String(length=100), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('drift_detected', sa.Boolean(), nullable=True),
    sa.Column('test_statistic', sa.Float(), nullable=True),
    sa.Column('p_value', sa.Float(), nullable=True),
    sa.Column('threshold', sa.Float(), nullable=True),
    sa.Column('drift_type', sa.String(length=50), nullable=True),
    sa.Column('baseline_stats', sa.JSON(), nullable=True),
    sa.Column('current_stats', sa.JSON(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_drift_detected', 'drift_results', ['drift_detected'], unique=False)
    op.create_index('idx_drift_timestamp_feature', 'drift_results', ['timestamp', 'feature_name'], unique=False)
    op.create_index(op.f('ix_drift_results_drift_detected'), 'drift_results', ['drift_detected'], unique=False)
    op.create_index(op.f('ix_drift_results_feature_name'), 'drift_results', ['feature_name'], unique=False)
    op.create_index(op.f('ix_drift_results_timestamp'), 'drift_results', ['timestamp'], unique=False)
    op.create_table('feature_importance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('feature_name', sa.String(length=100), nullable=False),
    sa.Column('importance_score', sa.Float(), nullable=True),
    sa.Column('shap_value', sa.Float(), nullable=True),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_importance_model_feature', 'feature_importance', ['model_version', 'feature_name'], unique=False)
    op.create_index('idx_importance_timestamp_feature', 'feature_importance', ['timestamp', 'feature_name'], unique=False)
    op.create_index(op.f('ix_feature_importance_feature_name'), 'feature_importance', ['feature_name'], unique=False)
    op.create_index(op.f('ix_feature_importance_model_version'), 'feature_importance', ['model_version'], unique=False)
    op.create_index(op.f('ix_feature_importance_timestamp'), 'feature_importance', ['timestamp'], unique=False)
    op.create_table('health_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('precision', sa.Float(), nullable=True),
    sa.Column('recall', sa.Float(), nullable=True),
    sa.Column('f1_score', sa.Float(), nullable=True),
    sa.Column('roc_auc', sa.Float(), nullable=True),
    sa.Column('expected_calibration_error', sa.Float(), nullable=True),
    sa.Column('num_predictions', sa.Integer(), nullable=True),
    sa.Column('prediction_accuracy_trend', sa.Float(), nullable=True),
    sa.Column('degradation_detected', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_health_timestamp_model', 'health_snapshots', ['timestamp', 'model_version'], unique=False)
    op.create_index(op.f('ix_health_snapshots_model_version'), 'health_snapshots', ['model_version'], unique=False)
    op.create_index(op.f('ix_health_snapshots_timestamp'), 'health_snapshots', ['timestamp'], unique=False)
    op.create_table('metric_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('window_size', sa.Integer(), nullable=True),
    sa.Column('threshold', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_metric_model_name', 'metric_snapshots', ['model_version', 'metric_name'], unique=False)
    op.create_index('idx_metric_timestamp_name', 'metric_snapshots', ['timestamp', 'metric_name'], unique=False)
    op.create_index(op.f('ix_metric_snapshots_model_version'), 'metric_snapshots', ['model_version'], unique=False)
    op.create_index(op.f('ix_metric_snapshots_timestamp'), 'metric_snapshots', ['timestamp'], unique=False)
    op.create_table('predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=False),
    sa.Column('prediction_id', sa.String(length=100), nullable=False),
    sa.Column('predicted_outcome', sa.Integer(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('features', sa.JSON(), nullable=False),
    sa.Column('extra_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_predictions_confidence', 'predictions', ['confidence'], unique=False)
    op.create_index('idx_predictions_timestamp_model', 'predictions', ['timestamp', 'model_version'], unique=False)
    op.create_index(op.f('ix_predictions_model_version'), 'predictions', ['model_version'], unique=False)
    op.create_index(op.f('ix_predictions_prediction_id'), 'predictions', ['prediction_id'], unique=True)
    op.create_index(op.f('ix_predictions_timestamp'), 'predictions', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_predictions_timestamp'), table_name='predictions')
    op.drop_index(op.f('ix_predictions_prediction_id'), table_name='predictions')
    op.drop_index(op.f('ix_predictions_model_version'), table_name='predictions')
    op.drop_index('idx_predictions_timestamp_model', table_name='predictions')
    op.drop_index('idx_predictions_confidence', table_name='predictions')
    op.drop_table('predictions')
    op.drop_index(op.f('ix_metric_snapshots_timestamp'), table_name='metric_snapshots')
    op.drop_index(op.f('ix_metric_snapshots_model_version'), table_name='metric_snapshots')
    op.drop_index('idx_metric_timestamp_name', table_name='metric_snapshots')
    op.drop_index('idx_metric_model_name', table_name='metric_snapshots')
    op.drop_table('metric_snapshots')
    op.drop_index(op.f('ix_health_snapshots_timestamp'), table_name='health_snapshots')
    op.drop_index(op.f('ix_health_snapshots_model_version'), table_name='health_snapshots')
    op.drop_index('idx_health_timestamp_model', table_name='health_snapshots')
    op.drop_table('health_snapshots')
    op.drop_index(op.f('ix_feature_importance_timestamp'), table_name='feature_importance')
    op.drop_index(op.f('ix_feature_importance_model_version'), table_name='feature_importance')
    op.drop_index(op.f('ix_feature_importance_feature_name'), table_name='feature_importance')
    op.drop_index('idx_importance_timestamp_feature', table_name='feature_importance')
    op.drop_index('idx_importance_model_feature', table_name='feature_importance')
    op.drop_table('feature_importance')
    op.drop_index(op.f('ix_drift_results_timestamp'), table_name='drift_results')
    op.drop_index(op.f('ix_drift_results_feature_name'), table_name='drift_results')
    op.drop_index(op.f('ix_drift_results_drift_detected'), table_name='drift_results')
    op.drop_index('idx_drift_timestamp_feature', table_name='drift_results')
    op.drop_index('idx_drift_detected', table_name='drift_results')
    op.drop_table('drift_results')
    op.drop_index(op.f('ix_degradation_analysis_timestamp'), table_name='degradation_analysis')
    op.drop_index(op.f('ix_degradation_analysis_model_version'), table_name='degradation_analysis')
    op.drop_index('idx_degradation_timestamp_model', table_name='degradation_analysis')
    op.drop_table('degradation_analysis')
    op.drop_index(op.f('ix_alerts_timestamp'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_severity'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_alert_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_acknowledged'), table_name='alerts')
    op.drop_index('idx_alerts_timestamp_severity', table_name='alerts')
    op.drop_index('idx_alerts_acknowledged', table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_alert_rules_rule_id'), table_name='alert_rules')
    op.drop_index(op.f('ix_alert_rules_enabled'), table_name='alert_rules')
    op.drop_table('alert_rules')
    # ### end Alembic commands ###
