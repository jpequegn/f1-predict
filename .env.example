# F1 Predict - Environment Configuration Example
# Copy this file to .env and fill in your actual values

# =============================================================================
# Application Configuration
# =============================================================================

# Environment (development, testing, production)
ENVIRONMENT=development

# Application settings
APP_NAME=f1-predict
APP_VERSION=0.1.0
DEBUG=true

# Logging configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/f1-predict.log

# =============================================================================
# Data Sources & APIs
# =============================================================================

# Formula 1 API Configuration
F1_API_BASE_URL=https://ergast.com/api/f1
F1_API_KEY=your_f1_api_key_here
F1_API_RATE_LIMIT=10  # requests per second

# Alternative F1 data sources
FASTF1_CACHE_DIR=data/cache/fastf1
OPENF1_API_KEY=your_openf1_api_key_here

# Weather API (for race day conditions)
WEATHER_API_KEY=your_weather_api_key_here
WEATHER_API_BASE_URL=https://api.openweathermap.org/data/2.5

# Sports betting APIs (for odds data)
BETTING_API_KEY=your_betting_api_key_here
BETTING_API_BASE_URL=https://api.the-odds-api.com/v4

# =============================================================================
# Database Configuration
# =============================================================================

# Primary database (PostgreSQL recommended for production)
DATABASE_URL=postgresql://username:password@localhost:5432/f1_predict
DATABASE_POOL_SIZE=5
DATABASE_MAX_OVERFLOW=10

# Cache database (Redis)
REDIS_URL=redis://localhost:6379/0
CACHE_TTL=3600  # seconds

# =============================================================================
# Machine Learning Configuration
# =============================================================================

# Model storage
MODEL_STORAGE_PATH=data/models
MODEL_REGISTRY_URI=file://./data/mlruns

# MLflow configuration (if using)
MLFLOW_TRACKING_URI=http://localhost:5000
MLFLOW_EXPERIMENT_NAME=f1-prediction
MLFLOW_REGISTRY_URI=sqlite:///data/mlflow.db

# Optuna configuration (hyperparameter optimization)
OPTUNA_STORAGE=sqlite:///data/optuna.db
OPTUNA_STUDY_NAME=f1-hyperopt

# Weights & Biases (if using)
WANDB_PROJECT=f1-predict
WANDB_API_KEY=your_wandb_api_key_here

# =============================================================================
# Feature Engineering
# =============================================================================

# Data update frequency
DATA_UPDATE_INTERVAL=3600  # seconds
FEATURE_CACHE_TTL=7200  # seconds

# Race prediction settings
PREDICTION_HORIZON_DAYS=7
MIN_TRAINING_RACES=50

# =============================================================================
# Model Configuration
# =============================================================================

# Cross-validation settings
CV_FOLDS=5
CV_STRATIFY=true

# Feature selection
MAX_FEATURES=100
FEATURE_SELECTION_METHOD=mutual_info

# Model performance thresholds
MIN_MODEL_ACCURACY=0.65
MIN_MODEL_PRECISION=0.60
MIN_MODEL_RECALL=0.60

# =============================================================================
# API Configuration (for future web service)
# =============================================================================

# Web server settings
HOST=0.0.0.0
PORT=8000
WORKERS=4

# API security
SECRET_KEY=your_super_secret_key_here
API_KEY_HEADER=X-API-Key
RATE_LIMIT=100  # requests per minute

# CORS settings
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]

# =============================================================================
# External Services
# =============================================================================

# Email notifications (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_password_here

# Monitoring & Alerting
SENTRY_DSN=your_sentry_dsn_here
DATADOG_API_KEY=your_datadog_api_key_here

# =============================================================================
# Development & Testing
# =============================================================================

# Testing database
TEST_DATABASE_URL=postgresql://username:password@localhost:5432/f1_predict_test

# Test data configuration
TEST_DATA_SEASONS=["2020", "2021", "2022"]
MOCK_EXTERNAL_APIS=true

# Performance profiling
ENABLE_PROFILING=false
PROFILING_OUTPUT_DIR=data/profiling

# =============================================================================
# Security
# =============================================================================

# Encryption keys
ENCRYPTION_KEY=your_encryption_key_here
JWT_SECRET_KEY=your_jwt_secret_here

# API rate limiting
RATE_LIMIT_STORAGE=redis://localhost:6379/1

# =============================================================================
# Data Privacy & Compliance
# =============================================================================

# Data retention policies
DATA_RETENTION_DAYS=365
ANONYMIZE_USER_DATA=true

# GDPR compliance
ENABLE_DATA_EXPORT=true
ENABLE_DATA_DELETION=true

# =============================================================================
# Performance & Scaling
# =============================================================================

# Caching configuration
CACHE_TYPE=redis
CACHE_DEFAULT_TIMEOUT=300

# Async processing
CELERY_BROKER_URL=redis://localhost:6379/2
CELERY_RESULT_BACKEND=redis://localhost:6379/3

# Resource limits
MAX_MEMORY_USAGE_MB=4096
MAX_CPU_CORES=4
GPU_ENABLED=false

# =============================================================================
# Backup & Recovery
# =============================================================================

# Backup configuration
BACKUP_STORAGE_PATH=data/backups
BACKUP_RETENTION_DAYS=30
AUTO_BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM

# =============================================================================
# Notes
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Use strong, unique passwords and API keys
# 3. Rotate secrets regularly
# 4. Use environment-specific configurations
# 5. Validate all environment variables on application startup