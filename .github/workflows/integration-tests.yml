name: Integration Tests

on:
  push:
    branches: [ main, develop, "feature/**" ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install uv
      run: |
        pip install uv
        uv --version

    - name: Sync dependencies with uv
      run: uv sync

    - name: Lint with ruff
      run: |
        uv run ruff check src/ tests/ --diff

    - name: Format check with ruff
      run: |
        uv run ruff format src/ tests/ --check --diff

    - name: Type check with mypy
      run: |
        uv run mypy src/

    - name: Run integration tests with coverage
      run: |
        uv run pytest tests/integration/ -v --cov=src/f1_predict --cov-report=term-missing --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: integration-tests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
        path: htmlcov/
        retention-days: 30

    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const testSummary = `
          ## Integration Test Results

          ✅ Tests passed on:
          - **OS**: ${{ matrix.os }}
          - **Python**: ${{ matrix.python-version }}

          [View coverage report](https://codecov.io/gh/${{ github.repository }})
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: testSummary
          });

  build-status:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Check test status
        run: |
          if [ "${{ needs.test.result }}" = "success" ]; then
            echo "✅ All integration tests passed!"
            exit 0
          else
            echo "❌ Some integration tests failed"
            exit 1
          fi
